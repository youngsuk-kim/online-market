version: '3.8'

services:

    # MySQL Stock
    mysql_stock:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: secret1!
            MYSQL_DATABASE: stock
        ports:
            - "3307:3306"
        volumes:
            - mysql_stock_data:/var/lib/mysql
        restart: always

    # MySQL Order
    mysql_order:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: secret1!
            MYSQL_DATABASE: order
        ports:
            - "3306:3306"
        volumes:
            - mysql_order_data:/var/lib/mysql
        restart: always

    # Redis
    redis:
        image: redis:latest
        ports:
            - "6379:6379"
        restart: always

    # Kafka
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:latest
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "hello-topic:1:1"  # 토픽 "my-topic"을 1 파티션과 복제 인자 1로 설정
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper

    # MongoDB
    product-mongodb:
        image: mongo:6.0
        container_name: mongodb
        ports:
            - "27017:27017"
        volumes:
            - product_mongodb_data:/data/db
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: secret1!
        restart: always

    # ELK
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data

    logstash:
        image: docker.elastic.co/logstash/logstash:8.9.0
        volumes:
            - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        ports:
            - "5000:5000"
        depends_on:
            - elasticsearch

    kibana:
        image: docker.elastic.co/kibana/kibana:8.9.0
        ports:
            - "5601:5601"
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch

# Volume
volumes:
    mysql_stock_data:
    mysql_order_data:
    grafana-data:
    product_mongodb_data:
    elasticsearch-data:
